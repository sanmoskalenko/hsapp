---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: default
spec:
  ports:
    - port: 5432
      protocol: TCP
  selector:
    app: postgresql
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: default
type: Opaque
data:
  USERNAME: aGVhbHRo
  PASSWORD: aGVhbHRocHc=
  POSTGRES_USER: cG9zdGdyZXM=
  POSTGRES_PASSWORD: cG9zdGdyZXNwdw==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-initdb-config
data:
  init.sh: |
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" -w  <<-EOSQL
    CREATE ROLE "$USERNAME" SUPERUSER CREATEDB CREATEROLE NOINHERIT LOGIN NOREPLICATION NOBYPASSRLS PASSWORD '$PASSWORD';
    CREATE DATABASE health_maindb;
    GRANT ALL PRIVILEGES ON DATABASE health_maindb TO "$USERNAME";
    CREATE DATABASE health_testdb;
    GRANT ALL PRIVILEGES ON DATABASE health_testdb TO "$USERNAME";
    EOSQL
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: default
  labels:
    app: postgresql
spec:
  serviceName: postgresql-service
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      volumes:
        - name: init-script
          configMap:
            name: postgresql-initdb-config
      containers:
        - name: postgresql
          image: postgres:latest
          envFrom:
            - secretRef:
                name: db-secret
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
          - mountPath: /docker-entrypoint-initdb.d  
            name: init-script
            readOnly: true
  volumeClaimTemplates:
  - metadata:
      name: postgresql-pvclaim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 1Gi